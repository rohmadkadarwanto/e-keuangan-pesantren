"use strict";var __awaiter=this&&this.__awaiter||function(a,e,t,n){return new(t||(t=Promise))(function(s,i){function r(a){try{o(n.next(a))}catch(e){i(e)}}function u(a){try{o(n.throw(a))}catch(e){i(e)}}function o(a){var e;a.done?s(a.value):((e=a.value)instanceof t?e:new t(function(a){a(e)})).then(r,u)}o((n=n.apply(a,e||[])).next())})},__importDefault=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(exports,"__esModule",{value:!0});const TransaksiDetail_1=__importDefault(require("../models/TransaksiDetail")),TransaksiKeuangan_1=__importDefault(require("../models/TransaksiKeuangan")),AkunKeuangan_1=__importDefault(require("../models/AkunKeuangan"));function createTransaksiKeuangan(a,e){return __awaiter(this,void 0,void 0,function*(){try{let{kode_akun:t,jumlah:n,kode_transaksi:s,kode_entitas:i,kode_jenis_transaksi:r,tanggal_transaksi:u,keterangan:o,tipe_transaksi:d}=a.body,l=yield TransaksiKeuangan_1.default.create({kode_transaksi:s,kode_entitas:i,kode_jenis_transaksi:r,tanggal_transaksi:u,keterangan:o});try{let k=yield AkunKeuangan_1.default.findAll({where:{kode_entitas:i}});for(let c of(yield TransaksiDetail_1.default.create({kode_transaksi:s,kode_akun:t,kode_jenis_transaksi:r,tipe_transaksi:d,jumlah:n,tanggal_transaksi:u}),k));e.status(201).json(l)}catch(f){e.status(500).json({error:f.message})}}catch($){e.status(500).json({error:$.message})}})}function createTransaksiKeuanganDoble(a,e){return __awaiter(this,void 0,void 0,function*(){try{let{kode_akun:t,jumlah:n,kode_transaksi:s,kode_entitas:i,kode_jenis_transaksi:r,tanggal_transaksi:u,keterangan:o,tipe_transaksi:d}=a.body,l=yield TransaksiKeuangan_1.default.create({kode_transaksi:s,kode_entitas:i,kode_jenis_transaksi:r,tanggal_transaksi:u,keterangan:o});try{let k=yield AkunKeuangan_1.default.findAll({where:{kode_entitas:i}});for(let c of k){let f=d||c.tipe_transaksi,$="kredit",g="debit";if("kredit"===c.tipe_transaksi&&"kredit"===d&&(f="debit"),"kredit"===d&&($="debit",g="kredit"),"kredit"===c.tipe_transaksi){let y={kode_transaksi:s,kode_akun:c.kode_akun,kode_jenis_transaksi:r,tipe_transaksi:$,jumlah:n,tanggal_transaksi:u};yield TransaksiDetail_1.default.create(y)}else{let T={kode_transaksi:s,kode_akun:c.kode_akun,kode_jenis_transaksi:r,tipe_transaksi:g,jumlah:n,tanggal_transaksi:u};yield TransaksiDetail_1.default.create(T)}}e.status(201).json(l)}catch(h){e.status(500).json({error:h.message})}}catch(K){e.status(500).json({error:K.message})}})}function getTransaksiKeuanganList(a,e){return __awaiter(this,void 0,void 0,function*(){try{let a=yield TransaksiKeuangan_1.default.findAll();e.status(200).json(a)}catch(t){e.status(500).json({error:t.message})}})}function getTransaksiKeuanganById(a,e){return __awaiter(this,void 0,void 0,function*(){try{let t=yield TransaksiKeuangan_1.default.findByPk(a.params.id);e.status(200).json(t)}catch(n){e.status(500).json({error:n.message})}})}function getTransaksiKeuanganByAkun(a,e){return __awaiter(this,void 0,void 0,function*(){try{let t=yield TransaksiKeuangan_1.default.findAll({include:[{model:TransaksiDetail_1.default,where:{kode_akun:a.params.kodeAkun},required:!1},]});e.status(200).json(t)}catch(n){e.status(500).json({error:n.message})}})}function updateTransaksiKeuangan(a,e){return __awaiter(this,void 0,void 0,function*(){try{let{kode_entitas:t,kode_jenis_transaksi:n,tanggal_transaksi:s,keterangan:i}=a.body,r=yield TransaksiKeuangan_1.default.findByPk(a.params.id);r?(yield r.update({kode_entitas:t,kode_jenis_transaksi:n,tanggal_transaksi:s,keterangan:i}),e.status(200).json(r)):e.status(404).json({error:"Financial transaction not found"})}catch(u){e.status(500).json({error:u.message})}})}function deleteTransaksiKeuangan(a,e){return __awaiter(this,void 0,void 0,function*(){try{let t=yield TransaksiKeuangan_1.default.findByPk(a.params.id);t?(yield t.destroy(),e.status(200).json({message:"Financial transaction deleted successfully"})):e.status(404).json({error:"Financial transaction not found"})}catch(n){e.status(500).json({error:n.message})}})}exports.default={createTransaksiKeuangan,getTransaksiKeuanganList,getTransaksiKeuanganById,updateTransaksiKeuangan,deleteTransaksiKeuangan,getTransaksiKeuanganByAkun};
